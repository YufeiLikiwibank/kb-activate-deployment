trigger: none
pr: none

# Use parameters (compile time) so stage names can embed them
parameters:
  - name: revisionVersion         # e.g. 4.0.13K
    type: string
    default: '4.0.13K'
  - name: releaseTo               # KB or BB
    type: string
    default: 'KB'
    values: [ 'KB', 'BB' ]
  - name: releaseRing
    type: string
    default: 'PROD'

  - name: MECM_ProdSiteServer
    type: string
    default: 'CM01.corp.bank.nz'
  - name: MECM_ProdSiteCode
    type: string
    default: 'ABC'

  - name: MECM_ProdLimitingCollectionName
    type: string
    default: 'All Systems'
  - name: MECM_PVTCollection
    type: string
    default: 'Root\\Applications\\Workstation\\Client Application Collections\\Activate KB/BB PVT'
  - name: MECM_ScheduledInstallCollection
    type: string
    default: 'Root\\Applications\\Workstation\\Client Application Collections\\Activate KB'

  - name: MECM_ScheduledCacheTime      # 'yyyy-MM-dd HH:mm' (client local)
    type: string
    default: '2025-09-15 19:00'
  - name: MECM_ScheduledInstallTime    # 'yyyy-MM-dd HH:mm' (client local)
    type: string
    default: '2025-09-16 04:00'

  - name: ConfigMgrRepoRoot
    type: string
    default: '\\fileserver\configmgr\Repo\Applications\Workstation'
  - name: IconRepo
    type: string
    default: '\\fileserver\configmgr\Repo\Icons'
  - name: IconFileName
    type: string
    default: 'activate.ico'
  - name: DPGroupCorp
    type: string
    default: 'Kiwibank All CORPNET DP'
  - name: DPGroupVpn
    type: string
    default: 'Kiwibank All VPN DP'

  - name: SourceRepo                 # UNC root with MSIs (no trailing '\')
    type: string
    default: '\\kbshares.corp.bank.nzpfs.co.nz\releases\_Drop\Activate'
  - name: PreferArch                 # any | x86 | x64 (optional filter)
    type: string
    default: 'any'
    values: [ 'any','x86','x64' ]
  - name: MsiPattern                 # regex-like name filter
    type: string
    default: 'Activate.*\.msi'
  - name: MsiFileName                # optional exact file name
    type: string
    default: ''

variables:
  vmImage: 'windows-2022'

stages:
# 0) Bootstrap: copy PS scripts to a predictable folder for templates (scriptsFolder)
- stage: Bootstrap_Scripts
  displayName: 'Bootstrap scripts'
  jobs:
  - job: Copy
    pool: { vmImage: $(vmImage) }
    steps:
    - powershell: |
        New-Item -ItemType Directory -Path "$(Pipeline.Workspace)\Cache" -Force | Out-Null
        Copy-Item "$(Build.SourcesDirectory)\scripts\*.ps1" "$(Pipeline.Workspace)\Cache" -Force
      displayName: 'Copy PS scripts to $(Pipeline.Workspace)\Cache'

# 1) Upload MSI (UNC â†’ artifact 'drop')
- template: templates/UploadMSITemplate.yml
  parameters:
    scriptsFolder: $(Pipeline.Workspace)\Cache
    sourceRepo: ${{ parameters.SourceRepo }}
    msiFileName: ${{ parameters.MsiFileName }}
    preferArch: ${{ parameters.PreferArch }}
    msiPattern: ${{ parameters.MsiPattern }}
    artifactName: 'drop'

# 2) Create/brand/distribute the application
- template: templates/MECMCreateApplicationTemplate.yml
  parameters:
    dryRun: False
    revisionVersion: ${{ parameters.revisionVersion }}
    releaseTo: ${{ parameters.releaseTo }}
    releaseRing: ${{ parameters.releaseRing }}
    scriptsFolder: $(Pipeline.Workspace)\Cache
    mecmSiteServer: ${{ parameters.MECM_ProdSiteServer }}
    mecmSiteCode: ${{ parameters.MECM_ProdSiteCode }}
    applicationFolderPath: ${{ parameters.ConfigMgrRepoRoot }}
    iconRepo: ${{ parameters.IconRepo }}
    iconFileName: ${{ parameters.IconFileName }}
    contentDistributionPoints: '${{ parameters.DPGroupCorp }};${{ parameters.DPGroupVpn }}'

# 3) Make application Available to PVT users
- template: templates/MECMAvailableDeploymentTemplate.yml
  parameters:
    dryRun: False
    taskGroupName: 'PVT${{ parameters.releaseTo }}'
    revisionVersion: ${{ parameters.revisionVersion }}
    releaseTo: ${{ parameters.releaseTo }}
    releaseRing: ${{ parameters.releaseRing }}
    scriptsFolder: $(Pipeline.Workspace)\Cache
    mecmSiteServer: ${{ parameters.MECM_ProdSiteServer }}
    mecmSiteCode: ${{ parameters.MECM_ProdSiteCode }}
    limitingCollectionName: ${{ parameters.MECM_ProdLimitingCollectionName }}
    userCollectionName: ${{ parameters.MECM_PVTCollection }}
    scheduledInstallTime: ''
    refreshDeviceCollection: false

# 4) Make application Required for scheduled device collection
- template: templates/MECMRequiredDeploymentTemplate.yml
  parameters:
    dryRun: False
    taskGroupName: 'Scheduled${{ parameters.releaseTo }}'
    dependsOnStageName: 'Deploy_Available_PVT${{ parameters.releaseTo }}'
    revisionVersion: ${{ parameters.revisionVersion }}
    releaseTo: ${{ parameters.releaseTo }}
    releaseRing: ${{ parameters.releaseRing }}
    scriptsFolder: $(Pipeline.Workspace)\Cache
    mecmSiteServer: ${{ parameters.MECM_ProdSiteServer }}
    mecmSiteCode: ${{ parameters.MECM_ProdSiteCode }}
    limitingCollectionName: ${{ parameters.MECM_ProdLimitingCollectionName }}
    userCollectionName: ${{ parameters.MECM_ScheduledInstallCollection }}
    scheduledCacheTime: ${{ parameters.MECM_ScheduledCacheTime }}
    scheduledInstallTime: ${{ parameters.MECM_ScheduledInstallTime }}
