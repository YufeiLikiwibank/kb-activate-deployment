parameters:
  - name: dryRun # Only allows validation and the gates to run
    type: boolean
    default: true

  - name: taskGroupName # Unique name for jobs
    type: string

  - name: revisionVersion
    type: string

  - name: releaseTo 
    type: string

  - name: scriptsFolder # Expected to be checked out prior to this template
    type: string

  - name: mecmSiteServer 
    type: string

  - name: limitingCollectionName 
    type: string

  - name: userCollectionName 
    type: string

  - name: scheduledInstallTime 
    type: string
    default: 04:00

  - name: scheduledCacheTime 
    type: string
    default: Now

  - name: refreshDeviceCollection 
    type: boolean
    default: true

steps:
  #Create  device collection from device list
  - task: powershell@2
    condition: eq(${{parameters.dryRun}}, False)
    name: create${{parameters.taskGroupName}}Collection
    displayName: Create ${{parameters.taskGroupName}} Collection of Devices
    inputs:
      targetType: filePath
      filePath: ${{parameters.scriptsFolder}}\CreateEnvironmentCollectionInMECM.ps1
      arguments: '-SCCMsiteServer ${{parameters.mecmSiteServer}} -releaseTo ${{parameters.releaseTo}} -limitingCollectionName "${{parameters.limitingCollectionName}}" -refreshDeviceCollection ${{parameters.refreshDeviceCollection}} -userCollectionName "${{parameters.userCollectionName}}"'

  #Run MECM deployment to Software Centre (Offertype=2 - AVAILABLE)
  - task: powershell@2
    condition: and(succeeded(), eq(${{parameters.dryRun}}, False))
    name: makeRequiredFor${{parameters.taskGroupName}}Collection
    displayName: Make Required to ${{parameters.taskGroupName}} Collection
    inputs:
      targetType: filePath
      filePath: ${{parameters.scriptsFolder}}\DeployClientToRequiredCollectionMECM.ps1
      arguments: '-packageName InTouch-Client-${{parameters.releaseTo}}-${{parameters.revisionVersion}} -releaseTo ${{parameters.releaseTo}} -SCCMsiteServer ${{parameters.mecmSiteServer}} -deploymentCollection "${{parameters.userCollectionName}}" -scheduledCacheTime "${{parameters.scheduledCacheTime}}" -scheduledInstallTime "${{parameters.scheduledInstallTime}}"'
